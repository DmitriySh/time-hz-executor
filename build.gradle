import java.time.ZonedDateTime

/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

ext {
    buildVesion = '0.1'
    powerMockVersion = "1.6.6"
    jacksonVersion = "2.8.7"
    hazelcastVersion = "3.6.7"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

task printVersion {
    logger.quiet "Version $buildVesion"
}


subprojects {
    apply plugin: 'java'
    group = 'ru.shishmakov'
    version = buildVesion

    tasks.withType(JavaCompile) {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    repositories {
        jcenter()
        mavenLocal()
    }

    tasks.withType(Jar) { jar ->
        jar.manifest.attributes(
                'Created-By': 'Gradle ' + gradle.gradleVersion + ', Java ' + JavaVersion.current(),
                'Date': ZonedDateTime.now(),
                'Implementation-Title': project.name + ' of project ' + rootProject.name,
                'Implementation-Version': version,
                'Implementation-Vendor': 'ru.shishmakov'
        )
        if (!project.name.startsWith("shared")) {
            jar.baseName = project.name + '-all'
            jar.from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        }
    }
}

configure(subprojects) {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    dependencies {
        compile 'ch.qos.logback:logback-classic:1+'
        compile 'org.apache.commons:commons-lang3:3+'
        compile 'com.google.guava:guava:21.0'
        compile 'com.google.inject:guice:4.1.0'
        compile 'ru.vyarus:guice-ext-annotations:1.2.1'

        compile 'org.aeonbits.owner:owner:1.0.9'
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
        compile "com.hazelcast:hazelcast:${hazelcastVersion}"
        compile "com.hazelcast:hazelcast-client:${hazelcastVersion}"

        testCompile 'org.hamcrest:hamcrest-all:1.3'
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-all:1.10.19'
        testCompile("org.powermock:powermock-api-mockito:${powerMockVersion}") {
            exclude group: 'org.hamcrest', module: 'hamcrest-core'
        }
        testCompile "org.powermock:powermock-module-junit4:${powerMockVersion}"
    }

    test {
        useJUnit()
        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
        minHeapSize = '128M'
        maxHeapSize = '256M'
    }
}
